March 15th, 2025

Finger script written

I wrote the script to fetch someone's gitdotplan files, known back in the day as "fingering"
a user on a server.  The script wasn't too bad, I just had to re-use the same git cloning code
that I had written for the updating, but then read the files instead of writing them.  In preparation
for my future nvim plugin, I included some arguments to pass in to read individual files, like the
.plan file or the .project file.  This will allow me to run a read command to get the buffer to edit
for nvim, and then run the update command to update the file, as I also included the same parameters
in the updater script as well.

I tossed around the idea of allowing any file to be fetched or edited, but did not go that route.
The reason I didn't want to was that I am implementing something that had a set of files already,
and the featureset in that regard has no reason to change.  I therefore used an enum to represent
the possible files.

I need to do a little more polish, checking error codes, etc. for both the finger and update scripts,
and then I can proceed with the nvim plugin.

-Andrew

March 13th, 2025

First pass at a script

I wrote a Python script today to add some automation to my .plan file editing, without having to
always go into my repo itself.  This allows me in future to write an editor plugin that can edit
the existing buffer and then pipe the output to this Python script to perform the update.

The way that it works is pretty straightforward:

1. Clone the git repo pointing to my "fingerserver" into a temporary directory. 
   Right now this is hardcoded to my own repo.

2. Check if we have piped input.  If we do, then set our new file contents to whatever is in stdin

3. If we don't have piped input, launch nvim with the cloned file in the temporary directory for editing,
   and once finished, read the updated file into our file data variable.

4. Update the cloned .plan file with our file data variable.  Yes, this is roundabout with the editor launching,
   but the editor is temporary and I wanted to get as much of the code flow in as possible right now

5. Commit the update with the current date and time and push it back to the remote repo

Not too bad, I'm using it for this update as well.

The next steps are some customization of the repo URL, and an nvim plugin so we can remove the manual editor
launch.

-Andrew

March 12th, 2025

First Entry

This entry is more of a test if anything, just to get things going and have something to upload.  
I don't really like blogging or anything like that, so I thought that a resurrection of a "finger"
server would be more interesting, as it's simple and more open-ended.  Let's see how it goes.

-Andrew
